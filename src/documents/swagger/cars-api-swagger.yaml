openapi: 3.0.3
info:
  title: Swagger - Cars API
  description: |-
    This is a sample of cars-api based on the OpenAPI 3.0 specification.  
  contact:
    email: luizdsouza.90@gmail.com
  version: 1.0.00
externalDocs:
  description: Postman - documentation and curls - prd
  url: https://documenter.getpostman.com/view/27581508/2s946ma9nX
paths:
  /api/listCars:
    get:
      tags:
        - cars
      summary: Cars List
      description: A list of all cars registered
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 64badf56e626f03be5e86058
                    title:
                      type: string
                      example: S-10
                    brand:
                      type: string
                      example: GM
                    price:
                      type: string
                      example: 140,000
                    age:
                      type: integer
                      example: 2023
        '500':
          description: Server Error
  /api/createCar:
    post:
      tags:
        - cars
      summary: Creates a new car.
      description: a new car object to register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
          '201':
            description: Car was created, Log of car's id (id) was created on database! "
          '404':
            description: Not found. Is missing information - title/brand/price/age
          '500':
            description: Server Error
  /books/listBooks:
    get:
      tags:
        - log
      summary: List of logs
      description: List of all logs generated by car's creation
    
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 64badf56e626f03be5e86058
                    data_hora:
                      type: string
                      example: "2023-07-21T19:41:10.933Z"
                    car_id:
                      type: string
                      example: 64badf56e626f03be5e860599
        '500':
          description: Server Error
components:
  schemas:
    Car:
      required:
      - title
      - brand
      - price
      - age
      type: object
      properties:
        title:
          type: string
          example: S-10
        brand:
          type: string
          example: GM
        price:
          type: string
          example: 140,000
        age:
          type: integer
          example: 2023
          
          



